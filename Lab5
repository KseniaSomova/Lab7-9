using System;
class Person
{
    private static int _personNumber = 0;
    public int PersonNumber => _personNumber++;

    private string _firstName;
    private string _lastName;
    private DateTime _birthDate;

    public string FirstName
    {
        get { return _firstName; }
        set { _firstName = value; }
    }

    public string LastName
    {
        get { return _lastName; }
        set { _lastName = value; }
    }

    public DateTime BirthDate
    {
        get { return _birthDate; }
        set { _birthDate = value; }
    }

    public Person(string firstName, string lastName, DateTime birthDate)
    {
        FirstName = firstName;
        LastName = lastName;
        BirthDate = birthDate;
    }
}

static class People
{
    static List<Person> _allPeople = new List<Person>();

    public static void AddPerson(Person person)
    {
        _allPeople.Add(person);
    }

    public static Person GetPersonByID(int id)
    {
        return _allPeople.Find(x => x.PersonNumber == id) as Person;
    }
}


class Student : Person
{
    private string _studentNumber;

    public string StudentNumber
    {
        get { return _studentNumber; }
        set { _studentNumber = value; }
    }

    public Student(string studentNumber, string firstName,
        string lastName, DateTime birthDate) : base(firstName, lastName, birthDate)
    {
        _studentNumber = studentNumber;
    }
}
class University
{
    private static int _universityNumber = 1;
    public int UniversityNumber => _universityNumber;
    private List<Student> _students = new List<Student>();
    public void AddStudent(Student student)
    {
        _students.Add(student);
    }
    public Student GetStudentByNumber(string studentNumber)
    {
        foreach (Student student in _students)
        {
            if (student.StudentNumber == studentNumber)
                return student;
        }
        return null;
    }
}

class Program
{
    static void Main(string[] args)
    {
        Person person1 = new Person("John", "Doe", new DateTime(1980, 1, 1));
        Person person2 = new Person("Jane", "Doe", new DateTime(1985, 2, 2));

        People.AddPerson(person1);
        People.AddPerson(person2);

        Console.WriteLine($"Person with ID {person1.PersonNumber}: {person1.FirstName} {person1.LastName} ({person1.BirthDate.ToString()})");
    }
}
